<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	<!-- 数据库连接池 -->
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:resource/db.properties" />
	<!-- 数据库连接池 -->
	<bean id="ds1" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${myjdbc.url}" />
		<property name="username" value="${myjdbc.username}" />
		<property name="password" value="${myjdbc.password}" />
		<property name="driverClassName" value="${myjdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>
	
	<bean id="ds2" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${msjdbc.url}" />
		<property name="username" value="${msjdbc.username}" />
		<property name="password" value="${msjdbc.password}" />
		<property name="driverClassName" value="${msjdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>
	
	
<bean id="dataSource" class="com.js.util.DynamicDataSource">  
    <property name="targetDataSources">  
        <map >  
            <entry value-ref="ds1" key="ds1"></entry>  
            <entry value-ref="ds2" key="ds2"></entry>  
        </map>  
    </property>  
    <property name="defaultTargetDataSource" ref="ds1"></property>      <!-- 默认使用ds1的数据源 -->
</bean>  
	
	<!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlmapconfig.xml" />
	</bean>

	

		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.js.mapper" />
	</bean>
	
	
	<!-- 自定义Realm -->
	<!-- <bean id="myRealm" class="com.js.realm.MyRealm"/>  
	
	安全管理器
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
  	  <property name="realm" ref="myRealm"/>  
	</bean>  
	
	Shiro过滤器
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    Shiro的核心安全接口,这个属性是必须的  
	    <property name="securityManager" ref="securityManager"/>
	    身份认证失败，则跳转到登录页面的配置  
	    <property name="loginUrl" value="/login.jsp"/>
	    权限认证失败，则跳转到指定页面  
	    <property name="unauthorizedUrl" value="/error.jsp"/>  
	    Shiro连接约束配置,即过滤链的定义  
	    <property name="filterChainDefinitions">  
	        <value>  
	             /login=anon
				 /admin*/**=authc
				/user/dbq=roles[skill]
				/user/kf=roles[Customer]
				/user/sc=roles[market]
	        </value>  
	    </property>
	</bean>  
	
	保证实现了Shiro内部lifecycle函数的bean执行  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
	
	开启Shiro注解
	<aop:config proxy-target-class="true"/>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
	<property name="proxyTargetClass" value="true" />
	</bean>
 
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
    <property name="securityManager" ref="securityManager"/>  
	</bean>
	
	 --> 
	
	
	
</beans>